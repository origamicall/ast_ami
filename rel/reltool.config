%% -*- mode: erlang -*-
%% ex: ft=erlang
{sys, [
       {lib_dirs, ["../apps", "../deps"]},
%       {erts, [{mod_cond, derived}, {app_file, strip}]},
       {app_file, strip},
       {rel, "ast_ami", "1",
        [
         kernel,
         stdlib,
         sasl,
	 lager,
         ast_ami
        ]},
       {rel, "start_clean", "",
        [
         kernel,
         stdlib
        ]},
       {boot_rel, "ast_ami"},
       {profile, embedded},
       {app, hipe, [{incl_cond, exclude}]},
%       {incl_cond, derived},
       {excl_archive_filters, [".*"]}, %% Do not archive built libs
       {excl_sys_filters, ["^bin/(?!start_clean.boot)",
                           "^erts.*/bin/(dialyzer|typer)",
                           "^erts.*/(doc|info|include|lib|man|src)"]},
       {excl_app_filters, ["\.gitignore"]},
       {app, ast_ami, [{mod_cond, app}, {incl_cond, include}]}
      ]}.

{target_dir, "ast_ami"}.

{overlay, [
           {mkdir, "log/sasl"},
           {copy, "files/erl", "\{\{erts_vsn\}\}/bin/erl"},
           {copy, "files/nodetool", "releases/\{\{rel_vsn\}\}/nodetool"},
           {copy, "ast_ami/bin/start_clean.boot",
                  "\{\{erts_vsn\}\}/bin/start_clean.boot"},
           {copy, "files/ast_ami", "bin/ast_ami"},
           {copy, "files/app.config", "etc/app.config"},
           {copy, "files/ast_ami.cmd", "bin/ast_ami.cmd"},
           {copy, "files/start_erl.cmd", "bin/start_erl.cmd"},
           {copy, "files/install_upgrade.escript", "bin/install_upgrade.escript"},
           {copy, "files/sys.config", "releases/\{\{rel_vsn\}\}/sys.config"},
           {copy, "files/vm.args", "etc/vm.args"}
          ]}.
